#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <300>;
};

&lt {
    flavor = "balanced";
    quick-tap-ms = <300>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        textautoinput: textautoinput {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(I) &kp MINUS &kp L &kp O &kp V &kp E &kp MINUS &kp M &kp A &kp R &kp U &kp P &kp O &kp R &kp O &kp MINUS &kp N9 &kp N2>;
            label = "TEXTAUTOINPUT";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESCAPE        &kp Q             &kp W         &kp E                     &kp R            &kp T                                         &kp Y                 &kp U    &kp I      &kp O       &lt 2 P               &kp COLON
&kp CAPS          &mt LEFT_SHIFT A  &kp S         &kp D                     &lt 3 F          &kp G                                         &kp H                 &lt 3 J  &lt 1 K    &kp L       &mt LEFT_SHIFT MINUS  &kp EXCL
&mt LEFT_GUI TAB  &kp Z             &kp X         &kp C                     &kp V            &kp B                                         &kp N                 &kp M    &kp COMMA  &kp PERIOD  &kp SLASH             &kp QUESTION
                                    &kp LEFT_ALT  &kp LC(LS(LG(NUMBER_4)))  &lt 1 LG(LS(C))  &kp SPACE  &kp LC(UP_ARROW)    &kp BACKSPACE  &mt RIGHT_GUI RETURN           &none
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        SYMBOL {
            bindings = <
&kp K_MUTE        &kp C_VOL_DN   &kp C_VOLUME_UP   &kp AMPERSAND         &none              &kp SEMI                                   &kp PLUS       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp N7        &kp N8        &kp N9
&kp LS(LA(DOWN))  &kp LS(LA(A))  &kp LA(LS(LEFT))  &kp LS(LA(UP_ARROW))  &kp LA(LS(RIGHT))  &kp LA(LG(LEFT))                           &kp EQUAL      &kp SINGLE_QUOTE      &kp DOUBLE_QUOTES      &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6
&kp LEFT_SHIFT    &kp CARET      &kp DOLLAR        &kp HASH              &kp AMPERSAND      &kp AT                                     &kp BACKSLASH  &kp LBKT              &kp RBKT               &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3
                                 &kp STAR          &kp PERCENT           &trans             &trans            &trans    &kp LG(MINUS)  &kp LG(PLUS)                         &kp N0
            >;
        };

        NUM {
            bindings = <
&kp LS(LG(X))      &kp LA(C)  &kp LA(S)  &kp LA(N)  &kp LA(A)  &kp LA(F)                         &none          &none           &none     &mkp MB2       &none  &none
&kp LC(LA(LG(C)))  &kp LG(A)  &none      &none      &none      &none                             &none          &kp LG(LEFT)    &mkp MB1  &kp LG(RIGHT)  &none  &none
&kp LC(LG(Q))      &none      &kp LG(X)  &kp LG(C)  &kp LG(V)  &kp LG(B)                         &none          &textautoinput  &none     &none          &none  &none
                              &trans     &trans     &trans     &trans     &trans    &kp PAGE_UP  &kp PAGE_DOWN                  &none
            >;
        };

        ARROW {
            bindings = <
&none  &kp NUMBER_1        &kp NUMBER_2  &kp NUMBER_3    &kp NUMBER_4  &kp N5                    &kp NUMBER_6  &kp N7          &kp N8          &kp N9           &kp N0  &none
&none  &kp LG(LEFT_SHIFT)  &kp LEFT_GUI  &kp LEFT_SHIFT  &none         &none                     &none         &kp LEFT_ARROW  &kp UP_ARROW    &kp RIGHT_ARROW  &none   &none
&none  &bt BT_SEL 0        &bt BT_SEL 1  &bt BT_CLR      &none         &none                     &none         &none           &kp DOWN_ARROW  &none            &none   &none
                           &none         &none           &trans        &trans  &trans    &trans  &trans                        &none
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans    &trans    &trans  &kp N0
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans  &kp N1
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans    &trans    &trans  &kp N2
                &trans  &trans  &trans  &trans  &trans    &trans  &trans            &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                          &trans            &trans  &trans  &trans  &trans  &kp N0
&trans  &trans  &trans  &trans  &trans  &trans                                          &trans            &trans  &trans  &trans  &trans  &kp N1
&trans  &trans  &trans  &trans  &trans  &trans                                          &trans            &trans  &trans  &trans  &trans  &kp N2
                &trans  &trans  &trans  &kp LS(LG(N5))  &kp LS(LG(N4))    &kp LC(DOWN)  &kp LC(UP_ARROW)          &trans
            >;
        };

        CONFIG {
            bindings = <
&trans  &bt BT_CLR_ALL  &bt BT_CLR    &trans        &trans        &trans                          &trans       &trans  &trans  &trans  &trans  &kp N0
&trans  &trans          &trans        &trans        &trans        &trans                          &trans       &trans  &trans  &trans  &trans  &kp N1
&trans  &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &bootloader  &trans  &trans  &trans  &trans  &kp N2
                        &trans        &trans        &trans        &trans        &trans    &trans  &trans               &trans
            >;
        };
    };
};
